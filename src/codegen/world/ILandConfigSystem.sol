// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { LandInfoData } from "../index.sol";
import { ItemInfoDTO, StackableItemDTO } from "../../libraries/LandDTOs.sol";

/**
 * @title ILandConfigSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ILandConfigSystem {
  function getLandInfo(uint256 landId) external view returns (LandInfoData memory landInfo);

  function setItemConfigAddress(address itemConfigAddress_) external;

  function setLandTransformAddress(address landTransformAddress_) external;

  function setLandTablesAndChairsAddress(address landTablesAndChairsAddress_) external;

  function setLandQuestTaskProgressUpdateAddress(address landQuestTaskProgressUpdateAddress_) external;

  function setSoftDestination(address softDestination_) external;

  function setRedistributor(address _redistributor) external;

  function setLandNFTs(address landNFTs_) external;

  function setSoftToken(address softToken_) external;

  function getSoftToken() external view returns (address);

  function setVesting(address vesting_) external;

  function getSoftDestinationAddress() external view returns (address);

  function getLandTablesAndChairsAddress() external view returns (address);

  function setItems(address items) external;

  function setMaxLevel(uint256 maxLevel_) external;

  function setSoftCostPerSquare(uint256 softCost_) external;

  function setCookingCost(uint256 cookingCost_) external;

  function setChunkSize(uint256 chunkSize) external;

  function getSoftCostPerSquare() external view returns (uint256);

  function setItems(ItemInfoDTO[] memory items) external;

  function setIsStackable(uint256 _base, uint256 _input, bool _isStackable) external;

  function setStackableItems(StackableItemDTO[] calldata stackableItems) external;

  function setReturnItems(uint256[] memory items, uint256[] memory itemsReturned) external;

  function setReturnsItem(uint256 _itemId, uint256 _itemReturned) external;

  function getCookingCost() external view returns (uint256);

  function getActiveStoves(uint256 stoveId) external view returns (uint256);

  function approveLandOperator(uint256 landId, address operator, bool status) external;

  function setMinStartingLimits(uint256 minStartingX, uint256 minStartingY) external;

  function setNonRemovableItems(uint256[] calldata items) external;

  function setNonRemovable(uint256 _nonRemovables, bool _removable) external;

  function setNonPlaceableItems(uint256[] calldata items) external;

  function setNonPlaceable(uint256 _nonPlaceable, bool _placeable) external;

  function setTable(uint256 _table, bool _isTable) external;

  function setChair(uint256 _chair, bool _isChair) external;

  function setTool(uint256 _tool, bool _isTool) external;

  function setRotatable(uint256[] memory _itemIds, bool _isRotatable) external;
}
